CREATE DEFINER=`root`@`localhost` PROCEDURE `add_or_update_employee`(
    IN emp_name VARCHAR(100),
    IN dept VARCHAR(50),
    IN doj DATE,
    IN email VARCHAR(100),
    IN salary DECIMAL(10, 2),
    IN bonus DECIMAL(10, 2)
)
BEGIN
    DECLARE existing_id INT DEFAULT NULL;
    DECLARE new_emp_id INT;
    
    SET existing_id = NULL;

    -- Step 1: Check if employee already exists by name + dept
    SELECT e.id
    INTO existing_id
    FROM employees e
    WHERE e.name = emp_name AND e.department = dept
    LIMIT 1;

    IF existing_id IS NOT NULL THEN
        -- Step 2: Update salary
        UPDATE salary_records
        SET base_salary = salary,
            bonus = bonus,
            record_created_at = NOW()
        WHERE employee_id = existing_id;

        -- Step 3: Log update
        INSERT INTO activity_logs(employee_id, action)
        VALUES (existing_id, 'Updated salary for existing employee');

    ELSE
        -- Step 4: Insert new employee
        INSERT INTO employees(name, department)
        VALUES (emp_name, dept);

        SET new_emp_id = LAST_INSERT_ID();

        -- Step 5: Insert employee details
        INSERT INTO employee_details(employee_id, date_of_joining, contact_email)
        VALUES (new_emp_id, doj, email);

        -- Step 6: Insert salary
        INSERT INTO salary_records(employee_id, base_salary, bonus)
        VALUES (new_emp_id, salary, bonus);

        -- Step 7: Log creation
        INSERT INTO activity_logs(employee_id, action)
        VALUES (new_emp_id, 'New employee added with details and salary');
    END IF;
END